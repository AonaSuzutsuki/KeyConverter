<Window x:Class="KeyConverterGUI.Views.ProcessSetting"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KeyConverterGUI.Views"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:commonViews="clr-namespace:CommonStyleLib.Views;assembly=CommonStyleLib"
        xmlns:views="clr-namespace:KeyConverterGUI.Views"
        xmlns:models="clr-namespace:KeyConverterGUI.Models"
        xmlns:lang="clr-namespace:LangResource"
        xmlns:viewModels="clr-namespace:KeyConverterGUI.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance viewModels:ProcessSettingViewModel}"
        Icon="pack://application:,,,/CommonStyleLib;component/Resources/1.ico"
        Title="Register Processes" Height="300" Width="600" ResizeMode="CanResize"
        TextOptions.TextFormattingMode="Display" TextOptions.TextRenderingMode="ClearType" Style="{DynamicResource WindowStyle}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Closing}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding Activated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Deactivated}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <i:InvokeCommandAction Command="{Binding StateChanged}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <commonViews:InvokeDelegateCommandAction Command="{Binding KeyDown}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=InvokeParameter}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Icon.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/Main.xaml" />
                <ResourceDictionary Source="pack://application:,,,/CommonStyleLib;component/Styles/ListBoxStyle.xaml" />
                <ResourceDictionary Source="../Styles/Button.xaml" />
                <ResourceDictionary Source="../Styles/Window.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid Style="{StaticResource ResourceKey=BackgroundGrid}">

        <Grid Margin="{Binding MainWindowMargin}">

            <StackPanel Orientation="Horizontal" Margin="5,0,0,0"
                        HorizontalAlignment="left"
                        VerticalAlignment="Top">
                <Image Source="{StaticResource Icon}" Width="15" Height="15" Stretch="Uniform" WindowChrome.IsHitTestVisibleInChrome="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <commonViews:InteractiveCommand Command="{Binding ImageMouseDown}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Image>
                <Label Content="Register Processes" Style="{DynamicResource ResourceKey=StatTitle}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="5"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                <Button Name="MainWindowMinimumBt" Content="{Binding MainWindowMinimumBtContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowMinimumBtClick}" />
                <Button Name="MainWindowCloseBt" Content="{Binding MainWindowCloseBtContent}" Style="{DynamicResource CaptionButtonStyleKey}" Command="{Binding MainWindowCloseBtClick}" />
            </StackPanel>

            <Grid Margin="5,25,5,5">
                <ListBox Name="ProcessItems" Background="Transparent" SelectedItem="{Binding ProcessSelectedItem.Value}" ItemsSource="{Binding ProcessItems}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding ProcessItemsMouseDownCommand}" CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor,  AncestorType={x:Type ListBox}}}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="BorderThickness" Value="10,0,0,0" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid>
                                            <Border
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}">
                                                <ContentPresenter Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" />
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="#4090ff" />
                                    <Setter Property="BorderBrush" Value="#FF2B4A76" />
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#444"/>
                                    <Setter Property="BorderBrush" Value="#444" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="models:ProcessItemInfo">
                            <Grid Margin="5" >

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="30" />
                                </Grid.ColumnDefinitions>

                                <TextBox Text="{Binding FullPath, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center">

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <i:InvokeCommandAction Command="{Binding FullPathGotFocusCommand}" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding LostFocusCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <TextBox.Resources>
                                        <Style x:Key="{x:Type TextBox}" TargetType="TextBox">
                                            <Setter Property="Foreground" Value="white" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                                                        <Border Name="TextBoxBorder" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderThickness="1" BorderBrush="Transparent">
                                                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="LightGray" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TextBox.Resources>
                                </TextBox>

                                <Button Grid.Column="1" Name="PlusBT" Content="..." Width="25" Height="25" Style="{StaticResource FlatButton}" Command="{Binding SetFullPathCommand}" />
                            </Grid>
                            <DataTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="false">
                                    <Setter Property="Opacity" Value="0" TargetName="PlusBT" />
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                    <ListBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Remove" IsEnabled="{Binding RemoveCurrentItemIsEnabled.Value}" Command="{Binding RemoveCurrentItemCommand}" />

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Opened">
                                    <i:InvokeCommandAction Command="{Binding ContextMenuOpenedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                </ListBox>

                <!--<TextBox Text="{Binding ProcessesText.Value, UpdateSourceTrigger=PropertyChanged}" />-->
            </Grid>
        </Grid>
    </Grid>
</Window>
